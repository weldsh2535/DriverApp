{"version":3,"sources":["webpack:///src/app/message/message.module.ts","webpack:///src/app/message/message.page.ts","webpack:///src/app/message/message-routing.module.ts","webpack:///src/app/message/message.page.html","webpack:///src/app/Service/message.service.ts","webpack:///src/app/message/message.page.scss"],"names":["MessagePageModule","imports","declarations","MessagePage","sharedService","messageService","customerName","getCustomerName","value","driverId","getDriverId","customerId","getCustomerId","currentUser","getMessage","getAllMessage","subscribe","res","messages","filter","c","localStorage","getItem","userId","listOfMessage","sort","a","b","Date","date","getTime","data","msgcontent","newMsg","sessionId","push","create","setTimeout","content","scrollToBottom","selector","template","routes","path","component","MessagePageRoutingModule","forChild","exports","MessageService","http","APIURL","apiURL","val","post","get","put","id","toPromise","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eASA;;;UAYaA,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAX7B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,gFAJO,EAKP,kEALO,CADD;AASRC,oBAAY,EAAE,CAAC,yDAAD;AATN,OAAT,CAW6B,GAAjBF,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCXAG,WAAW;AAQpB,6BAAoBC,aAApB,EACUC,cADV,EACuC;AAAA;;AADnB,eAAAD,aAAA,GAAAA,aAAA;AACV,eAAAC,cAAA,GAAAA,cAAA;AAAgC;;AATtB;AAAA;AAAA,iBAUrB,oBAAQ;AACP,iBAAKC,YAAL,GAAoB,KAAKF,aAAL,CAAmBG,eAAnB,GAAqCC,KAAzD;AACA,iBAAKC,QAAL,GAAgB,KAAKL,aAAL,CAAmBM,WAAnB,GAAiCF,KAAjD;AACA,iBAAKG,UAAL,GAAkB,KAAKP,aAAL,CAAmBQ,aAAnB,GAAmCJ,KAArD;AACA,iBAAKK,WAAL,GAAkB,KAAKF,UAAvB;AACA,iBAAKG,UAAL;AACA;AAhBoB;AAAA;AAAA,iBAiBtB,sBAAU;AAAA;;AACR,iBAAKT,cAAL,CAAoBU,aAApB,GAAoCC,SAApC,CAA8C,UAAAC,GAAG,EAAE;AACjD,kBAAIC,QAAQ,GAAGD,GAAG,CAACE,MAAJ,CAAW,UAAAC,CAAC;AAAA,uBAAEA,CAAC,CAACX,QAAF,IAAYY,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ,IACFF,CAAC,CAACX,QAAF,IAAc,KAAI,CAACA,QADjB,IAC8BW,CAAC,CAACG,MAAF,IAAY,KAAI,CAACZ,UADjD;AAAA,eAAZ,CAAf;AAEA,mBAAI,CAACa,aAAL,GAAqBN,QAAQ,CAACO,IAAT,CAAc,UAACC,CAAD,EAAGC,CAAH;AAAA,uBAAQ,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,EAAiBC,OAAjB,KAA6B,IAAIF,IAAJ,CAASD,CAAC,CAACE,IAAX,EAAiBC,OAAjB,EAArC;AAAA,eAAd,CAArB;AACA,mBAAI,CAACjB,WAAL,GAAmBQ,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAnB;AACD,aALD;AAMD;AAxBqB;AAAA;AAAA,iBAyBvB,uBAAW;AAAA;;AACT,gBAAIS,IAAI,GAAE;AACTC,wBAAU,EAAC,KAAKC,MADP;AAETJ,kBAAI,EAAC,IAAID,IAAJ,EAFI;AAGTL,oBAAM,EAAC,KAAKZ,UAHH;AAITF,sBAAQ,EAAC,KAAKA,QAJL;AAKTyB,uBAAS,EAAEb,YAAY,CAACC,OAAb,CAAqB,QAArB;AALF,aAAV;AAOA,iBAAKE,aAAL,CAAmBW,IAAnB,CAAwBJ,IAAxB;AACA,iBAAKP,aAAL,CAAmBC,IAAnB,CAAwB,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,EAAiBC,OAAjB,KAA6B,IAAIF,IAAJ,CAASD,CAAC,CAACE,IAAX,EAAiBC,OAAjB,EAAvC;AAAA,aAAxB;AACD,iBAAKzB,cAAL,CAAoB+B,MAApB,CAA2BL,IAA3B,EAAiCf,SAAjC,CAA2C,UAAAC,GAAG,EAAE,CAC9C;AACD,aAFD;AAGA,iBAAKgB,MAAL,GAAc,EAAd;AACAI,sBAAU,CAAC,YAAM;AACf,oBAAI,CAACC,OAAL,CAAaC,cAAb,CAA4B,GAA5B;AACD,aAFS,CAAV;AAGA;AA1CsB;;AAAA;AAAA,S;;;;gBAPf;;gBADA;;;;;;gBAaN,uD;AAAS,iBAAC,yDAAD;;;AALCpC,iBAAW,6DALvB,gEAAU;AACTqC,gBAAQ,EAAE,aADD;AAETC,gBAAQ,EAAR,qEAFS;;AAAA,OAAV,CAKuB,GAAXtC,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,UAAMuC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACR5C,eAAO,EAAE,CAAC,6DAAa6C,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBF,wBAAwB,CAAxB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFG,cAAc;AAEzB,gCAAqBC,IAArB,EAAuC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AADZ,eAAAC,MAAA,GAAS,yEAAYC,MAArB;AAER;;AAHwB;AAAA;AAAA,iBAIzB,gBAAOC,GAAP,EAAiB;AACf,mBAAO,KAAKH,IAAL,CAAUI,IAAV,CAAe,KAAKH,MAAL,GAAc,UAA7B,EAAyCE,GAAzC,CAAP;AACD;AANwB;AAAA;AAAA,iBAOzB,yBAAa;AACX,mBAAO,KAAKH,IAAL,CAAUK,GAAV,CAAmB,KAAKJ,MAAL,GAAc,UAAjC,CAAP;AACD;AATwB;AAAA;AAAA,iBAUzB,uBAAcE,GAAd,EAAwB;AACtB,mBAAO,KAAKH,IAAL,CAAUM,GAAV,CAAc,KAAKL,MAAL,GAAc,WAA5B,EAAyCE,GAAzC,CAAP;AACD;AAZwB;AAAA;AAAA,iBAazB,uBAAcI,EAAd,EAAkB;AAChB,mBAAO,KAAKP,IAAL,WAAiB,KAAKC,MAAL,GAAc,WAAd,GAA4BM,EAA7C,EAAiDC,SAAjD,EAAP;AACD;AAfwB;;AAAA;AAAA,S;;;;gBALlB;;;;AAKIT,oBAAc,6DAH1B,iEAAW;AACVU,kBAAU,EAAE;AADF,OAAX,CAG0B,GAAdV,cAAc,CAAd;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA","file":"message-message-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagePageRoutingModule } from './message-routing.module';\n\nimport { MessagePage } from './message.page';\n// import { AutosizeModule } from 'ngx-autosize';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MessagePageRoutingModule,\n    ReactiveFormsModule,\n    // AutosizeModule\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { MessageService } from '../Service/message.service';\nimport { SharedService } from '../Service/shared.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n  driverId: any;\n  customerId: any;\n  listOfMessage: any[];\n  newMsg: any;\n  @ViewChild(IonContent) content:IonContent  \n  currentUser: any;\n  customerName: any;\n    constructor(private sharedService:SharedService,\n      private messageService:MessageService){}\n   ngOnInit(){\n    this.customerName = this.sharedService.getCustomerName().value;\n    this.driverId = this.sharedService.getDriverId().value;\n    this.customerId = this.sharedService.getCustomerId().value;\n    this.currentUser =this.customerId;\n    this.getMessage();\n   }\n  getMessage(){\n    this.messageService.getAllMessage().subscribe(res=>{\n      let messages = res.filter(c=>c.driverId==localStorage.getItem('userId') \n                              && c.driverId == this.driverId &&  c.userId == this.customerId);\n      this.listOfMessage = messages.sort((a,b)=> new Date(a.date).getTime() - new Date(b.date).getTime());\n      this.currentUser = localStorage.getItem(\"userId\");\n    })\n  }\n sendMessage(){\n   let data ={\n    msgcontent:this.newMsg,\n    date:new Date(),\n    userId:this.customerId,\n    driverId:this.driverId,\n    sessionId: localStorage.getItem(\"userId\")\n   }\n   this.listOfMessage.push(data);\n   this.listOfMessage.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  this.messageService.create(data).subscribe(res=>{\n    // alert(res.toString());\n  });\n  this.newMsg = '';\n  setTimeout(() => {\n    this.content.scrollToBottom(200);\n  });\n }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MessagePage } from './message.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagePageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"detail\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{this.customerName}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-grid>\\n  <ion-row *ngFor=\\\"let message of listOfMessage\\\">\\n   <ion-col size=\\\"9\\\"  *ngIf=\\\"currentUser !== message.sessionId\\\"  class=\\\"message other-message\\\">\\n     <b>{{message.user}}</b>\\n     <span>{{message.msgcontent}}</span>\\n     <div class=\\\"time\\\" text-right><br>\\n     {{message.date|date:'short'}}\\n     </div>\\n   </ion-col>\\n   <ion-col offset=\\\"3\\\" size=\\\"9\\\" *ngIf=\\\"currentUser === message.sessionId\\\" class=\\\"message my-message\\\">\\n    <b>{{message.user}}</b>\\n    <span>{{message.msgcontent}}</span>\\n    <div class=\\\"time\\\" text-right><br>\\n    {{message.date|date:'short'}}\\n    </div>\\n  </ion-col>\\n  </ion-row>\\n</ion-grid>\\n<ion-footer>\\n  <ion-toolbar >\\n   <ion-row align-items-center no-padding>\\n     <ion-col size=\\\"10\\\">\\n       <textarea autosize maxRows=\\\"4\\\" [(ngModel)]=\\\"newMsg\\\" class=\\\"message-input\\\"></textarea>\\n     </ion-col>\\n     <ion-col size=\\\"2\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg===''\\\"\\n      class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n      <ion-icon name=\\\"send-outline\\\"></ion-icon>\\n    </ion-button>\\n    </ion-col>\\n   </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  readonly APIURL = environment.apiURL;\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/Message', val);\n  }\n  getAllMessage(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/Message');\n  }\n  updateMessage(val: any) {\n    return this.http.put(this.APIURL + '/Message/', val);\n  }\n  removeMessage(id) {\n    return this.http.delete(this.APIURL + '/Message/' + id).toPromise();\n  }\n}\n","export default \".message {\\n  padding: 10px;\\n  border-radius: 10px;\\n  margin-bottom: 4px;\\n  white-space: pre-wrap;\\n}\\n\\n.other-message {\\n  background: var(--ion-color-tertiary);\\n  color: #fff;\\n}\\n\\n.my-message {\\n  background: var(--ion-color-secondary);\\n  color: #fff;\\n}\\n\\n.time {\\n  color: #dfdfdf;\\n  float: right;\\n  font-size: small;\\n}\\n\\n.msg-btn {\\n  --padding-start:0.5em;\\n  --padding-end:0.5em;\\n  margin-top: 10px;\\n}\\n\\n.message-input {\\n  width: 100%;\\n  border: 1px solid var(--ion-color-medium);\\n  border-radius: 10px;\\n  background: #fff;\\n  resize: none;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXG1lc3NhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixrQkFBaUI7RUFDakIscUJBQXFCO0FBQ3RCOztBQUNBO0VBQ0kscUNBQXFDO0VBQ3JDLFdBQVc7QUFFZjs7QUFBQTtFQUNJLHNDQUFzQztFQUN0QyxXQUFVO0FBR2Q7O0FBREE7RUFDSSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGdCQUFnQjtBQUlwQjs7QUFGQTtFQUNFLHFCQUFnQjtFQUNoQixtQkFBYztFQUNkLGdCQUFnQjtBQUtsQjs7QUFIQTtFQUNJLFdBQVc7RUFDWCx5Q0FBeUM7RUFDekMsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQU12QiIsImZpbGUiOiJtZXNzYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdle1xyXG4gcGFkZGluZzoxMHB4O1xyXG4gYm9yZGVyLXJhZGl1czoxMHB4O1xyXG4gbWFyZ2luLWJvdHRvbTo0cHg7XHJcbiB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbn1cclxuLm90aGVyLW1lc3NhZ2V7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuLm15LW1lc3NhZ2V7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxuICAgIGNvbG9yOiNmZmY7XHJcbn1cclxuLnRpbWV7XHJcbiAgICBjb2xvcjogI2RmZGZkZjtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZTogc21hbGw7XHJcbn1cclxuLm1zZy1idG57XHJcbiAgLS1wYWRkaW5nLXN0YXJ0OjAuNWVtO1xyXG4gIC0tcGFkZGluZy1lbmQ6MC41ZW07XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4ubWVzc2FnZS1pbnB1dHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn0iXX0= */\";"]}
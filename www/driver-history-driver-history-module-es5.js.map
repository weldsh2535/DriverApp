{"version":3,"sources":["webpack:///src/app/driver-history/driver-history.page.html","webpack:///src/app/driver-history/driver-history.page.ts","webpack:///src/app/driver-history/driver-history.page.scss","webpack:///src/app/driver-history/driver-history.module.ts","webpack:///src/app/driver-history/driver-history-routing.module.ts"],"names":["DriverHistoryPage","orderService","accountService","restaurantService","datepipe","listOfOrder","model","date","Date","currentMonth","getMonth","currentYear","getFullYear","currentDate","getDate","console","log","getDay","getAllRestaurant","subscribe","res","listOfRestaurant","startdate","getOrderByDriverId","getRestaurant","searchdate","getdate","transform","startOfWeek","diff","setDate","endofweek","lastday","dt","startdateofweek","startMonth","startYear","startDate","Enddateofweek","endMonth","endYear","endDate","addDays","days","find","Number","mon","Tuesday","Wednedday","Thruds","Friday","Sat","Sun","userId","localStorage","getItem","getAllOrder","result","filter","c","driver","length","order","orderStatuses","isChecked","val","undefined","forEach","element","getAllAccount","restaurant","id","restaurantId","data","restaurantName","name","DateTime","dateTime","Customer","customer","fullName","PhoneNumber","phonenumber","CLocation","location","RLocation","OrderStatus","Total","total","Driver","Vehicle","vehicle","orderLocation","restaurantStatus","restaurantStatuses","push","sort","a","b","getTime","getRefresh","massge","message","setTimeout","event","target","complete","ev","detail","value","scheduleOrder","currentWeek","dateOfOrders","orderMonth","orderYear","orderDate","monthlyOrders","yearlyOrdes","increament","selector","template","DriverHistoryPageModule","imports","declarations","routes","path","component","DriverHistoryPageRoutingModule","forChild","exports"],"mappings":"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","file":"driver-history-driver-history-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Orders history</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <!-- <div class=\\\"container\\\">  \\n    <form (ngSubmit)=\\\"searchdate()\\\" novalidate>  \\n        <div class=\\\"col-sm-3 form-group\\\">  \\n            <input type=\\\"text\\\" #startdate=\\\"ngModel\\\" name=\\\"startdate\\\" [(ngModel)]=\\\"model.startdate\\\"  \\n                placeholder=\\\"From Date\\\" bsDatepicker class=\\\"form-control\\\" />  \\n        </div>  \\n        <div class=\\\"col-sm-3 form-group\\\">  \\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Find Date</button>  \\n        </div>  \\n    </form>  \\n</div>  \\n<div></div>  \\n<div class=\\\"container\\\">  \\n    <div class=\\\"  row\\\" style=\\\"margin-top:10px;margin-bottom: 10px;\\\">  \\n        <div class=\\\"col-sm-6 form-group\\\">  \\n            <b> Week Start Day and Date :</b> {{startdateofweek}}  \\n        </div>  \\n        <div class=\\\"col-sm-6 form-group\\\">  \\n            <b> Week End Day and Date : </b>{{Enddateofweek}}  \\n        </div>  \\n    </div>  \\n</div>  -->\\n  <ion-segment  (ionChange)=\\\"segmentChanged($event)\\\">\\n    <ion-segment-button value=\\\"daily\\\">\\n      <ion-label>Daily</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"week\\\">\\n      <ion-label>Weekly</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"month\\\">\\n      <ion-label>Monthly</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"year\\\">\\n      <ion-label>Yearly</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <div class=\\\"message\\\" *ngIf=\\\"massge\\\" >\\n    <ion-grid >\\n      <ion-row>\\n        <ion-label>{{message}}</ion-label>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n  <div class=\\\"orders\\\">\\n    <ion-row *ngFor=\\\"let meal of listOfOrder ; let i = index\\\" class=\\\"ion-padding meal-row\\\">\\n      <ion-col size=\\\"8\\\" class=\\\"border-bottom\\\">\\n        <ion-label>\\n          {{ meal.restaurantName }}\\n          <p>{{ meal.DateTime|date:'short' }}</p>\\n          <ion-button fill=\\\"clear\\\" >\\n            Delivered\\n          </ion-button>\\n        </ion-label>\\n       </ion-col>\\n      <ion-col size=\\\"4\\\" class=\\\"border-bottom\\\">\\n        <ion-label>\\n          {{ meal.Customer }}\\n          <p>{{ meal.PhoneNumber }}</p>\\n        </ion-label>\\n        <p>Payment</p>\\n        <ion-label color=\\\"dark\\\"\\n        ><b> {{ meal.Total | currency:'ETB' }}</b></ion-label\\n      >\\n     </ion-col>\\n    </ion-row>\\n  </div>\\n</ion-content>\\n\";","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Order, Restaurant } from 'src/Table/table';\nimport { AccountService } from '../Service/account.service';\nimport { OrderService } from '../Service/order.service';\nimport { RestaurantService } from '../Service/restaurant.service';\n\n@Component({\n  selector: 'app-driver-history',\n  templateUrl: './driver-history.page.html',\n  styleUrls: ['./driver-history.page.scss'],\n})\nexport class DriverHistoryPage implements OnInit {\n  listOfOrder: any[] = [];\n  listOfRestaurant: Restaurant[];\n  message: string;\n  massge: boolean;\n  // currentDate: string;\n  currentMonth: number;\n  currentYear: number;\n  currentDate: number;\n  currentWeek: number;\n  //to decare week calculate\n  startdateofweek: any;\n  Enddateofweek: any;\n  model: any = {};\n  date = new Date()\n  name: string;\n  Friday: any;\n  Thruds: any;\n  mon: any;\n  Tuesday: any;\n  Wednedday: any;\n  Sat: any;\n  Sun: any;\n  orderMonth: number;\n  orderYear: number;\n  orderDate: number;\n  startMonth: number;\n  startYear: number;\n  startDate: number;\n  endMonth: number;\n  endYear: number;\n  endDate: number;\n  increament: number;\n  constructor(private orderService: OrderService,\n    private accountService: AccountService,\n    private restaurantService: RestaurantService,\n    public datepipe: DatePipe) {\n    //this.currentDate = new Date().toDateString();\n    this.currentMonth = new Date().getMonth() + 1;\n    this.currentYear = new Date().getFullYear();\n    this.currentDate = new Date().getDate();\n    console.log(this.currentDate);\n    console.log(this.currentMonth);\n    console.log(this.currentYear);\n    console.log(new Date().getDay());\n    this.restaurantService.getAllRestaurant().subscribe(res => {\n      this.listOfRestaurant = res;\n    })\n  }\n\n  ngOnInit() {\n    this.model.startdate = new Date();\n   // debugger;\n    this.getOrderByDriverId();\n    this.getRestaurant();\n    this.searchdate();\n  }\n  searchdate() {\n    //debugger;\n    console.log(this.model.startdate);\n    let getdate = this.datepipe.transform(this.model.startdate, 'yyyy,M,d');\n    function startOfWeek(date) {\n      var diff = date.getDate() - date.getDay() + (date.getDay() === 0 ? -6 : 1);\n      return new Date(date.setDate(diff));\n    }\n    function endofweek(date) {\n      var lastday = date.getDate() - (date.getDay() - 1) + 6;\n      return new Date(date.setDate(lastday));\n    }\n    var dt = new Date(getdate);\n    this.startdateofweek = this.datepipe.transform(startOfWeek(dt));\n    //convertion of currentStartDate\n    this.startMonth = new Date(this.startdateofweek).getMonth() + 1;\n    this.startYear = new Date(this.startdateofweek).getFullYear();\n    this.startDate = new Date(this.startdateofweek).getDate();\n    console.log(this.startdateofweek)\n    this.Enddateofweek = this.datepipe.transform(endofweek(dt));\n    //convertion of currentEndDate\n    this.endMonth = new Date(this.Enddateofweek).getMonth() + 1;\n    this.endYear = new Date(this.Enddateofweek).getFullYear();\n    this.endDate = new Date(this.Enddateofweek).getDate();\n    console.log(this.Enddateofweek)\n    function addDays(date, days) {\n      const find = new Date(Number(date))\n      find.setDate(date.getDate() + days)\n      return find\n    }\n    const date = new Date(startOfWeek(dt));\n    this.mon = this.datepipe.transform(startOfWeek(dt), 'EEEE, MMMM d');\n    this.Tuesday = this.datepipe.transform(addDays(date, 1), 'EEEE, MMMM d');\n    this.Wednedday = this.datepipe.transform(addDays(date, 2), 'EEEE, MMMM d');\n    this.Thruds = this.datepipe.transform(addDays(date, 3), 'EEEE, MMMM d');\n    this.Friday = this.datepipe.transform(addDays(date, 4), 'EEEE, MMMM d');\n    this.Sat = this.datepipe.transform(addDays(date, 5), 'EEEE, MMMM d');\n    this.Sun = this.datepipe.transform(endofweek(dt), 'EEEE, MMMM d');\n  }\n  getRestaurant() {\n    this.restaurantService.getAllRestaurant().subscribe(res => {\n      this.listOfRestaurant = res;\n    })\n  }\n  getOrderByDriverId() {\n    this.listOfOrder = [];\n    let userId = localStorage.getItem(\"userId\");\n    this.orderService.getAllOrder().subscribe(result => {\n      let res = result.filter(c => c.driver == userId);\n      if (res.length > 0) {\n        let order = res.filter(c => c.orderStatuses.find(c => c.isChecked == true && c.val == \"delivered\"))\n        if (order.length > 0 && this.listOfRestaurant != undefined) {\n          order.forEach(element => {\n            this.accountService.getAllAccount().subscribe(result => {\n              let restaurant = this.listOfRestaurant.find(c => c.id == element.restaurantId)\n              let data = {\n                id: element.id,\n                restaurantName: restaurant.name,\n                DateTime: element.dateTime,\n                Customer: result.find(c => c.id == element.customer).fullName,\n                PhoneNumber: result.find(c => c.id == element.customer).phonenumber,\n                CLocation: result.find(c => c.id == element.customer).location,\n                RLocation: element.location,\n                OrderStatus: element.orderStatuses,\n                Total: element.total,\n                Driver: element.driver,\n                Vehicle: element.vehicle,\n                orderLocation: element.orderLocation,\n                restaurantStatus: element.restaurantStatuses\n              }\n              this.listOfOrder.push(data);\n              this.listOfOrder.sort((a, b) => new Date(b.DateTime).getTime() - new Date(a.DateTime).getTime());\n              // console.log(this.listOfOrder)\n            });\n          });\n        }\n        else {\n          this.getRefresh();\n        }\n      }\n      else {\n        this.massge = true\n        this.message = \"no order history\"\n      }\n    });\n  }\n  getRefresh() {\n    setTimeout(() => {\n      this.getOrderByDriverId();\n    }, 200);\n  }\n  // Dummy refresher function\n  doRefresh(event) {\n    setTimeout(() => {\n      this.getOrderByDriverId();\n      event.target.complete();\n    }, 2000);\n  }\n  segmentChanged(ev: any) {\n    // console.log('Segment changed', ev.detail.value);\n    if (ev.detail.value == \"daily\") {\n      this.scheduleOrder(this.currentDate, \"daily\");\n    }\n    else if (ev.detail.value == \"week\") {\n      this.scheduleOrder(this.currentWeek, \"week\");\n    }\n    else if (ev.detail.value == \"month\") {\n      this.scheduleOrder(this.currentMonth, \"month\");\n    }\n    else if (ev.detail.value == \"year\") {\n      this.scheduleOrder(this.currentYear, \"year\");\n    }\n  }\n  scheduleOrder(date, event) {\n    this.listOfOrder = [];\n    let userId = localStorage.getItem(\"userId\");\n    this.orderService.getAllOrder().subscribe(result => {\n      let res = result.filter(c => c.driver == userId);\n      if (res.length > 0) {\n        let order = res.filter(c => c.orderStatuses.find(c => c.isChecked == true && c.val == \"delivered\"))\n        if (order.length > 0 && this.listOfRestaurant != undefined) {\n          order.forEach(element => {\n            this.accountService.getAllAccount().subscribe(result => {\n              let restaurant = this.listOfRestaurant.find(c => c.id == element.restaurantId)\n              let data = {\n                id: element.id,\n                restaurantName: restaurant.name,\n                DateTime: element.dateTime,\n                Customer: result.find(c => c.id == element.customer).fullName,\n                PhoneNumber: result.find(c => c.id == element.customer).phonenumber,\n                CLocation: result.find(c => c.id == element.customer).location,\n                RLocation: element.location,\n                OrderStatus: element.orderStatuses,\n                Total: element.total,\n                Driver: element.driver,\n                Vehicle: element.vehicle,\n                orderLocation: element.orderLocation,\n                restaurantStatus: element.restaurantStatuses\n              }\n              const dateOfOrders = new Date(element.dateTime).getDate();\n              // to calculate week convertion\n              this.orderMonth = new Date(element.dateTime).getMonth() + 1;\n              this.orderYear = new Date(element.dateTime).getFullYear();\n              this.orderDate = new Date(element.dateTime).getDate();\n              const monthlyOrders = new Date(element.dateTime).getMonth() + 1;\n              const yearlyOrdes = new Date(element.dateTime).getFullYear();\n              //  console.log(\"date  ==\"+dateOfOrders + \"month==\" +monthlyOrders +\"year==\"+yearlyOrdes);\n              if (event == \"daily\") {\n                this.increament = 0;\n                if (date == dateOfOrders) {\n                  this.increament = this.increament+1;\n                  this.listOfOrder.push(data);\n                  this.listOfOrder.sort((a, b) => new Date(b.DateTime).getTime() - new Date(a.DateTime).getTime());\n                }\n                if(this.increament == 0){\n                  this.massge = true\n                  this.message = \"no orders in this daily\"\n                }\n                else{\n                  this.massge = false\n                }\n              }\n              else if (event == \"week\") {\n                this.increament = 0;\n                if (this.startDate <= this.orderDate && this.startMonth == this.orderMonth && this.startYear == this.orderYear\n                  && this.endDate>=this.orderDate && this.endMonth == this.orderMonth && this.endYear == this.orderYear){\n                  this.increament = this.increament+1;\n                  this.listOfOrder.push(data);\n                  this.listOfOrder.sort((a, b) => new Date(b.DateTime).getTime() - new Date(a.DateTime).getTime());\n                }\n                if(this.increament == 0){\n                  this.massge = true\n                  this.message = \"no orders in this week\"\n                }\n                else{\n                  this.massge = false\n                }\n              }\n              else if (event == \"month\") {\n                this.increament = 0;\n                if (date == monthlyOrders) {\n                  this.increament = this.increament+1;\n                  this.listOfOrder.push(data);\n                  this.listOfOrder.sort((a, b) => new Date(b.DateTime).getTime() - new Date(a.DateTime).getTime());\n                }\n                if(this.increament == 0){\n                  this.massge = true\n                  this.message = \"no orders in this month\"\n                }\n                else{\n                  this.massge = false\n                }\n              }\n              else if (event == \"year\") {\n                this.increament = 0;\n                if (date == yearlyOrdes) {\n                  this.increament = this.increament+1;\n                  this.listOfOrder.push(data);\n                  this.listOfOrder.sort((a, b) => new Date(b.DateTime).getTime() - new Date(a.DateTime).getTime());\n                }\n                if(this.increament == 0){\n                  this.massge = true\n                  this.message = \"no orders in this year\"\n                }\n                else{\n                  this.massge = false\n                }\n              }\n            });\n          });\n        }\n        else {\n          this.getRefresh();\n        }\n      }\n      else {\n        this.massge = true\n        this.message = \"no order history\"\n      }\n    });\n  }\n}\n","export default \".message {\\n  padding-top: 3px;\\n  padding-left: 12px;\\n  color: #337ab7;\\n  font-size: 27px;\\n}\\n\\nion-segment {\\n  padding-left: 165px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGRyaXZlci1oaXN0b3J5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGVBQWU7QUFDbkI7O0FBQ0U7RUFDRSxtQkFBbUI7QUFFdkIiLCJmaWxlIjoiZHJpdmVyLWhpc3RvcnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lc3NhZ2V7XHJcbiAgICBwYWRkaW5nLXRvcDogM3B4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMnB4O1xyXG4gICAgY29sb3I6ICMzMzdhYjc7XHJcbiAgICBmb250LXNpemU6IDI3cHg7XHJcbiAgfVxyXG4gIGlvbi1zZWdtZW50IHtcclxuICAgIHBhZGRpbmctbGVmdDogMTY1cHg7XHJcbiAgfSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DriverHistoryPageRoutingModule } from './driver-history-routing.module';\n\nimport { DriverHistoryPage } from './driver-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DriverHistoryPageRoutingModule\n  ],\n  declarations: [DriverHistoryPage]\n})\nexport class DriverHistoryPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DriverHistoryPage } from './driver-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DriverHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DriverHistoryPageRoutingModule {}\n"]}
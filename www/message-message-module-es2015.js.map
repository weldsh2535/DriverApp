{"version":3,"sources":["./src/app/message/message.module.ts","./src/app/message/message.page.ts","./src/app/message/message-routing.module.ts","./src/app/message/message.page.html","./src/app/Service/message.service.ts","./src/app/message/message.page.scss"],"names":[],"mappings":"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","file":"message-message-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagePageRoutingModule } from './message-routing.module';\n\nimport { MessagePage } from './message.page';\n// import { AutosizeModule } from 'ngx-autosize';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MessagePageRoutingModule,\n    ReactiveFormsModule,\n    // AutosizeModule\n  ],\n  declarations: [MessagePage]\n})\nexport class MessagePageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { MessageService } from '../Service/message.service';\nimport { SharedService } from '../Service/shared.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.page.html',\n  styleUrls: ['./message.page.scss'],\n})\nexport class MessagePage implements OnInit {\n  driverId: any;\n  customerId: any;\n  listOfMessage: any[];\n  newMsg: any;\n  @ViewChild(IonContent) content:IonContent  \n  currentUser: any;\n  customerName: any;\n    constructor(private sharedService:SharedService,\n      private messageService:MessageService){}\n   ngOnInit(){\n    this.customerName = this.sharedService.getCustomerName().value;\n    this.driverId = this.sharedService.getDriverId().value;\n    this.customerId = this.sharedService.getCustomerId().value;\n    this.currentUser =this.customerId;\n    this.getMessage();\n   }\n  getMessage(){\n    this.messageService.getAllMessage().subscribe(res=>{\n      let messages = res.filter(c=>c.driverId==localStorage.getItem('userId') \n                              && c.driverId == this.driverId &&  c.userId == this.customerId);\n      this.listOfMessage = messages.sort((a,b)=> new Date(a.date).getTime() - new Date(b.date).getTime());\n      this.currentUser = localStorage.getItem(\"userId\");\n    })\n  }\n sendMessage(){\n   let data ={\n    msgcontent:this.newMsg,\n    date:new Date(),\n    userId:this.customerId,\n    driverId:this.driverId,\n    sessionId: localStorage.getItem(\"userId\")\n   }\n   this.listOfMessage.push(data);\n   this.listOfMessage.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  this.messageService.create(data).subscribe(res=>{\n    // alert(res.toString());\n  });\n  this.newMsg = '';\n  setTimeout(() => {\n    this.content.scrollToBottom(200);\n  });\n }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MessagePage } from './message.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagePageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"detail\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>{{this.customerName}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-grid>\\n  <ion-row *ngFor=\\\"let message of listOfMessage\\\">\\n   <ion-col size=\\\"9\\\"  *ngIf=\\\"currentUser !== message.sessionId\\\"  class=\\\"message other-message\\\">\\n     <b>{{message.user}}</b>\\n     <span>{{message.msgcontent}}</span>\\n     <div class=\\\"time\\\" text-right><br>\\n     {{message.date|date:'short'}}\\n     </div>\\n   </ion-col>\\n   <ion-col offset=\\\"3\\\" size=\\\"9\\\" *ngIf=\\\"currentUser === message.sessionId\\\" class=\\\"message my-message\\\">\\n    <b>{{message.user}}</b>\\n    <span>{{message.msgcontent}}</span>\\n    <div class=\\\"time\\\" text-right><br>\\n    {{message.date|date:'short'}}\\n    </div>\\n  </ion-col>\\n  </ion-row>\\n</ion-grid>\\n<ion-footer>\\n  <ion-toolbar >\\n   <ion-row align-items-center no-padding>\\n     <ion-col size=\\\"10\\\">\\n       <textarea autosize maxRows=\\\"4\\\" [(ngModel)]=\\\"newMsg\\\" class=\\\"message-input\\\"></textarea>\\n     </ion-col>\\n     <ion-col size=\\\"2\\\">\\n      <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" color=\\\"primary\\\" [disabled]=\\\"newMsg===''\\\"\\n      class=\\\"msg-btn\\\" (click)=\\\"sendMessage()\\\">\\n      <ion-icon name=\\\"send-outline\\\"></ion-icon>\\n    </ion-button>\\n    </ion-col>\\n   </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  readonly APIURL = environment.apiURL;\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/Message', val);\n  }\n  getAllMessage(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/Message');\n  }\n  updateMessage(val: any) {\n    return this.http.put(this.APIURL + '/Message/', val);\n  }\n  removeMessage(id) {\n    return this.http.delete(this.APIURL + '/Message/' + id).toPromise();\n  }\n}\n","export default \".message {\\n  padding: 10px;\\n  border-radius: 10px;\\n  margin-bottom: 4px;\\n  white-space: pre-wrap;\\n}\\n\\n.other-message {\\n  background: var(--ion-color-tertiary);\\n  color: #fff;\\n}\\n\\n.my-message {\\n  background: var(--ion-color-secondary);\\n  color: #fff;\\n}\\n\\n.time {\\n  color: #dfdfdf;\\n  float: right;\\n  font-size: small;\\n}\\n\\n.msg-btn {\\n  --padding-start:0.5em;\\n  --padding-end:0.5em;\\n  margin-top: 10px;\\n}\\n\\n.message-input {\\n  width: 100%;\\n  border: 1px solid var(--ion-color-medium);\\n  border-radius: 10px;\\n  background: #fff;\\n  resize: none;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXG1lc3NhZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQixrQkFBaUI7RUFDakIscUJBQXFCO0FBQ3RCOztBQUNBO0VBQ0kscUNBQXFDO0VBQ3JDLFdBQVc7QUFFZjs7QUFBQTtFQUNJLHNDQUFzQztFQUN0QyxXQUFVO0FBR2Q7O0FBREE7RUFDSSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGdCQUFnQjtBQUlwQjs7QUFGQTtFQUNFLHFCQUFnQjtFQUNoQixtQkFBYztFQUNkLGdCQUFnQjtBQUtsQjs7QUFIQTtFQUNJLFdBQVc7RUFDWCx5Q0FBeUM7RUFDekMsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQU12QiIsImZpbGUiOiJtZXNzYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdle1xyXG4gcGFkZGluZzoxMHB4O1xyXG4gYm9yZGVyLXJhZGl1czoxMHB4O1xyXG4gbWFyZ2luLWJvdHRvbTo0cHg7XHJcbiB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcbn1cclxuLm90aGVyLW1lc3NhZ2V7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItdGVydGlhcnkpO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuLm15LW1lc3NhZ2V7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3Itc2Vjb25kYXJ5KTtcclxuICAgIGNvbG9yOiNmZmY7XHJcbn1cclxuLnRpbWV7XHJcbiAgICBjb2xvcjogI2RmZGZkZjtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZTogc21hbGw7XHJcbn1cclxuLm1zZy1idG57XHJcbiAgLS1wYWRkaW5nLXN0YXJ0OjAuNWVtO1xyXG4gIC0tcGFkZGluZy1lbmQ6MC41ZW07XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4ubWVzc2FnZS1pbnB1dHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIHJlc2l6ZTogbm9uZTtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}